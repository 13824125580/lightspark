<?xml version="1.0"?>
<!--
NOTE: name attribute should be:
lightspark_CLASSNAME_test or lightspark_FUNCTIONNAME_test for toplevel tests
lightspark_NAMESPACE_CLASSNAME_test or lightspark_NAMESPACE_FUNCTIONNAME_test for non-toplevel tests
(e.g.: lightspark_net_NetStream_test or lightspark_Array_test)
-->
<mx:Application name="lightspark_Math_test"
	xmlns:mx="http://www.adobe.com/2006/mxml"
	layout="absolute"
	applicationComplete="appComplete();"
	backgroundColor="white">

<mx:Script>
	<![CDATA[
	import Tests;
	private function appComplete():void
	{
		Tests.assertEquals(1, Math.abs(1), "Math.abs", true);
		Tests.assertEquals(1, Math.abs(-1), "Math.abs", true);

		Tests.assertEquals(0, Math.acos(1), "Math.acos", true);
		Tests.assertEquals(Math.PI, Math.acos(-1), "Math.acos", true);

		Tests.assertEquals(0, Math.asin(0), "Math.asin", true);
		Tests.assertEquals(Math.PI/2, Math.asin(1), "Math.asin", true);

		Tests.assertEquals(0, Math.atan(0), "Math.atan", true);

		Tests.assertEquals(0, Math.atan2(0, 0), "Math.atan2", true);
		Tests.assertEquals(Math.PI, Math.atan2(0, -0), "Math.atan2", true);

		Tests.assertEquals(0, Math.ceil(0), "Math.ceil", true);
		Tests.assertEquals(1, Math.ceil(0.1), "Math.ceil", true);
		Tests.assertEquals(31337, Math.ceil(31336.8), "Math.ceil", true);

		Tests.assertEquals(1, Math.cos(0), "Math.cos", true);
		Tests.assertEquals(1.0, Math.cos(0), "Math.cos", true);

		Tests.assertEquals(1, Math.exp(0), "Math.exp", true);
		Tests.assertEquals(Math.E, Math.exp(1), "Math.exp", true);

		Tests.assertEquals(0, Math.floor(0.9), "Math.floor", true);
		Tests.assertEquals(31337, Math.floor(31337.9), "Math.floor", true);

		Tests.assertEquals(Math.LN10, Math.log(10), "Math.log", true);
		Tests.assertEquals(Math.LN2, Math.log(2), "Math.log", true);
		Tests.assertEquals(Math.LOG2E, 1/Math.log(2), "Math.log", true);
		Tests.assertEquals(Math.LOG10E, 1/Math.log(10), "Math.log", true);

		Tests.assertEquals(9, Math.max(9, 8, 7, 6, 5, 4, 3, 2, 1, 0), "Math.max", true);
		Tests.assertEquals(01134, Math.max(0, 1, 2, 3, 01134), "Math.max", true);

		Tests.assertEquals(1, Math.min(9, 8, 7, 6, 5, 4, 3, 2, 1), "Math.min", true);
		Tests.assertEquals(0, Math.min(0, 1, 2, 3, 01134), "Math.min", true);

		var me:int = 1; var awesome:int = 99999;
		Tests.assertEquals(me, Math.pow(me, awesome), "Math.pow", true);
		Tests.assertEquals(Math.SQRT1_2, Math.pow(1/2, 0.5), "Math.pow", true);

		var notrandom:Number = Math.random();
		Tests.assertTrue(0 <= notrandom && notrandom < 1, "Math.random", true);

		Tests.assertEquals(0, Math.round(0), "Math.round", true);
		Tests.assertEquals(1, Math.round(0.5), "Math.round", true);
		Tests.assertEquals(2, Math.round(1.777), "Math.round", true);

		Tests.assertEquals(0, Math.sin(0), "Math.sin", true);
		Tests.assertEquals(0.0, Math.sin(0), "Math.sin", true);

		Tests.assertEquals(Math.SQRT2, Math.sqrt(2), "Math.sqrt", true);
		Tests.assertEquals(Math.SQRT1_2, Math.sqrt(0.5), "Math.sqrt", true);

		Tests.assertEquals(0, Math.tan(0), "Math.tan", true);
		Tests.assertEquals(0.0, Math.tan(0), "Math.tan", true);

		Tests.report(visual, this.name);
	}
	]]>
</mx:Script>

<mx:UIComponent id="visual" />

</mx:Application>
